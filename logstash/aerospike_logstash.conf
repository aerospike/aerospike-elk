input {
  file {
    path => "/var/log/aerospike/aerospike.log"
    type => "asd"
    start_position => "end" # Default = end
    codec => multiline {
         patterns_dir=> ["/etc/logstash/conf.d/multi_pattern"]
         pattern => "%{HISTOGRAM}|%{AS_HEADER}stacktrace: %{AS_REST:stacktrace}"
         what => "previous"
    }
  }
}

filter {
  if [type] == "asd" {
        grok {
                match => { 
                        "path" => ["/logs/%{GREEDYDATA:logfile}"]
                }
        }
        if "multiline" in [tags] {
                grok {
                        patterns_dir => ["/etc/logstash/conf.d/patterns"]
                        match => { 
                                "message" => ["%{HIST_START}(%{SPACE})+%{AS_REST:histograms}"] 
                        }
                }
                # histograms are saved into the 'histograms' field from the previous grok 
                mutate {
                        gsub => [
                                # remove everything before the double spaces
                                "histograms", ".*(\s{2})",""
                        ]
                }
                kv{
                        value_split => ": "
                        field_split => "() "
                        target => "histogram"
                        source => "histograms"
                        remove_field => [ "histograms" ]
                }
		ruby {
 			code => "
 				kv = event.get('histogram')
 				kv.to_hash.keys.each { |k|
 					kv[k] = kv[k].to_i
 				}
 				event.set('histogram',kv)
 				"
 		}
        } else {
                grok {
                        patterns_dir => ["/etc/logstash/conf.d/patterns"]
                        match => {
                                "message" => ["%{AS_NS}","%{AS_TICK}","%{AS_NSUP}","%{AS_XDR}","%{AS_SINDEX}","%{AS_ERR}","%{AS_LOG}"]
                        }
                }
        }
      }
      date {
        match => [ "logdate", "MMM dd YYYY HH:mm:ss ZZZ", "MMM d YYYY HH:mm:ss ZZZ"]
      }
    }
}

output {
  elasticsearch {
    host => localhost
    type => aerospike
  }

  # stdout {
  #   codec => rubydebug
  # }
}
